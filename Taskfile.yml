version: '3'

dotenv: ['.env']

tasks:
  solution:key:generate:
    cmds:
      - openssl req -new -newkey rsa:4096 -nodes -keyout signing_key.key -out public_key.csr -subj "/C=UK/CN=local"
      - openssl x509 -req -sha512 -days 365 -in public_key.csr -signkey signing_key.key -out private_key.pem
    dir: "{{.TASKFILE_DIR}}/resources/data"

  solution:build:
    cmds:
      - dotnet build
      - task: solution:key:generate
    dir: "{{.TASKFILE_DIR}}/src"
  
  solution:test:
    cmds:
      - task: solution:build
      - dotnet test Effuse.sln
    dir: "{{.TASKFILE_DIR}}/src"

  solution:clean:
    cmds:
      - find . -iname "bin" -print0 | xargs -0 rm -rf
      - find . -iname "TestResults" -print0 | xargs -0 rm -rf

  core:aws:dependencies:
    cmds:
      - dotnet tool install -g Amazon.Lambda.Tools

  sso:aws:package:
    dotenv: ['.sso.env']
    cmds:
      - dotnet lambda package
    dir: "{{.TASKFILE_DIR}}/src/Effuse.SSO.AWS.Handlers"

  sso:aws:deploy:
    dotenv: ['.sso.env']
    cmds:
      - task: solution:build
      - task: sso:aws:package
      - cdk --app "{{.CDK_APP}}" bootstrap
      - cdk --app "{{.CDK_APP}}" deploy --require-approval never
    vars:
      CDK_APP: dotnet run --project src/Effuse.SSO.AWS.Infrastructure/Effuse.SSO.AWS.Infrastructure.csproj
      APP_PREFIX: single-signon

  sso:local:run:
    dotenv: ['.sso.env']
    cmds:
      - task: solution:build
      - ./src/Effuse.SSO.Local/bin/Debug/net6.0/Effuse.SSO.Local
    env:
      APP_PREFIX: single-signon
      DATA_DIR: ./resources/data
      JWT_SECRET:
        sh: echo $(<resources/signing_key.key)
      JWT_CERTIFICATE:
        sh: echo $(<resources/private_key.pem)